{"version":3,"file":"static/js/586.8dd4c453.chunk.js","mappings":"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","sources":["components/App.styled.jsx","components/ContactList/ContactList.styled.jsx","redux/contacts/selectors.js","components/ContactList/ContactList .jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ol`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 350px;\n  padding: 30px 10px;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  & li {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\nexport const Button = styled.button`\n  cursor: pointer;\n  border-radius: 5px;\n  outline: none;\n  color: #ffffff;\n  border: 1px solid black;\n  margin-left: 5px;\n  padding: 3px 10px;\n  background-color: #2c3e50;\n  :active {\n    background-color: #5f5ffc;\n  }\n  &:hover {\n    background-color: #34495e;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.4);\n  }\n\n  :active {\n    background-color: #5f5ffc;\n  }\n`;\nexport const LoadingContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter.value;\n","import { List, Button, LoadingContainer } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\n\nimport { deleteContact, fetchContacts } from 'redux/contacts/operation';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const { items: contacts, isLoading, error } = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (contacts.length > 0) {\n      return;\n    }\n\n    dispatch(fetchContacts());\n  }, [contacts, dispatch]);\n\n  const getFilteredContacts = () => {\n    const regExp = new RegExp(filter, 'gi');\n    return contacts.filter(({ name }) => name.match(regExp));\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <>\n      {isLoading && !error && (\n        <LoadingContainer>\n          <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        </LoadingContainer>\n      )}\n\n      {error && !isLoading && <h2>Oops, something went wrong ({error}) </h2>}\n      {!error && (\n        <List>\n          {contacts.length === 0 && !isLoading && (\n            <h3>here will be your contacts</h3>\n          )}\n          {filter && filteredContacts.length === 0 && <h3>no matches found</h3>}\n          {filteredContacts.map(({ name, id, number }) => {\n            return (\n              <li key={id}>\n                <b>{name}:</b> {number}\n                <Button\n                  type=\"button\"\n                  disabled={isLoading}\n                  onClick={() => {\n                    dispatch(deleteContact(id));\n                  }}\n                >\n                  Delete\n                </Button>\n              </li>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  gap: 5px;\n  & input {\n    width: 300px;\n    padding: 5px 3px;\n    box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.1);\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport { StyledLabel } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const filterInputId = nanoid();\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n  return (\n    <>\n      <StyledLabel>\n        Find contacts by name\n        <input\n          type=\"text\"\n          id={filterInputId}\n          onChange={e => {\n            dispatch(setFilter(e.target.value));\n          }}\n          value={filter}\n        ></input>\n      </StyledLabel>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  width: 350px;\n  padding: 30px 10px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.3);\n`;\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  gap: 5px;\n  & input {\n    width: 300px;\n    padding: 5px 3px;\n    box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.1);\n  }\n`;\nexport const StyledButton = styled.button`\n  cursor: pointer;\n  border-radius: 5px;\n  outline: none;\n  border: 1px solid black;\n  background-color: #2c3e50;\n  color: #ffffff;\n  padding: 10px 20px;\n  &:hover {\n    background-color: #34495e;\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4);\n  }\n\n  :active {\n    background-color: #5f5ffc;\n  }\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { StyledForm, StyledLabel, StyledButton } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operation';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const { items: contacts } = useSelector(getContacts);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newName = name;\n\n    const isInContacts = contacts.find(({ name }) => name === newName);\n\n    if (isInContacts) {\n      alert(`${name} is aready in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledLabel>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </StyledLabel>\n      <StyledLabel>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          id={numberInputId}\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </StyledLabel>\n      <StyledButton type=\"submit\">Add contact</StyledButton>\n    </StyledForm>\n  );\n};\n","import { Container } from 'components/App.styled';\nimport { ContactList } from 'components/ContactList/ContactList ';\nimport { Filter } from 'components/Filter/Filter';\nimport { Form } from 'components/Form/Form';\n// import { Toaster } from 'react-hot-toast';\n\nexport default function Contacts() {\n  return (\n    <Container>\n      <h2>Phonebook</h2>\n\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["Container","styled","List","Button","LoadingContainer","getContacts","state","contacts","getFilter","filter","value","ContactList","useSelector","items","isLoading","error","dispatch","useDispatch","useEffect","length","fetchContacts","filteredContacts","regExp","RegExp","name","match","getFilteredContacts","strokeColor","strokeWidth","animationDuration","width","visible","map","id","number","type","disabled","onClick","deleteContact","StyledLabel","Filter","filterInputId","nanoid","onChange","e","setFilter","target","StyledForm","StyledButton","Form","useState","setName","setNumber","nameInputId","numberInputId","handleChange","reset","onSubmit","preventDefault","newName","find","alert","addContact","pattern","title","required","Contacts"],"sourceRoot":""}